/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package libreria;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import libreria.Loging.SesionUsuario;
/**
 *
 * @author daniela
 */
public class Registrocliente extends javax.swing.JFrame {
    private int filaSeleccionada = -1;
    Connection conn;

    /**
     * Creates new form TrabajadorAgregar
     */
    public Registrocliente() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.conn = conexion.getConnection();
        consultarDatos();
        
        if (SesionUsuario.tipoUsuario.equalsIgnoreCase("Cajero")) {
        eliminarC.setEnabled(false); // Bloquea el botón Eliminar
        modificar.setEnabled(false);   // Bloquea el botón Editar
        
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboUsuario = new javax.swing.JComboBox<>();
        Salir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usuarios = new javax.swing.JTable();
        eliminarC = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        contraseña1 = new libreria.Contraseña();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/encabezado.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 170));

        jPanel2.setBackground(new java.awt.Color(255, 153, 0));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("INGRESO CLIENTE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 138, -1));

        jLabel2.setBackground(new java.awt.Color(204, 102, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setText("Nombre");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 60, -1));

        jLabel3.setBackground(new java.awt.Color(204, 102, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Apellidos");
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 70, -1));

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 248, -1));
        jPanel1.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 248, -1));

        jLabel10.setBackground(new java.awt.Color(204, 102, 0));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("Correo");
        jLabel10.setOpaque(true);
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 60, -1));
        jPanel1.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 248, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/GuardarTodo.png"))); // NOI18N
        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        jLabel5.setBackground(new java.awt.Color(204, 102, 0));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setText("Categoria");
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, 20));

        comboUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Cliente" }));
        jPanel1.add(comboUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 248, 20));

        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir_1.png"))); // NOI18N
        Salir.setText("SALIR");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jPanel1.add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/descarga.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 310, 490));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Usuarios existentes");
        jLabel8.setOpaque(true);

        usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String[] {
                "ID Usuario", "Nombre", "Apellidos", "Correo Electrónico", "Tipo de Usuario"
            }
        )
    );
    usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            usuariosMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(usuarios);

    eliminarC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar.png"))); // NOI18N
    eliminarC.setText("ELIMINAR CLIENTE");
    eliminarC.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            eliminarCActionPerformed(evt);
        }
    });

    modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Recargar.png"))); // NOI18N
    modificar.setText("MODIFICAR");
    modificar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            modificarActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap(704, Short.MAX_VALUE)
            .addComponent(modificar)
            .addGap(203, 203, 203))
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(51, 51, 51)
            .addComponent(contraseña1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(570, 570, 570)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(eliminarC)))))
                .addContainerGap(56, Short.MAX_VALUE)))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap(374, Short.MAX_VALUE)
            .addComponent(contraseña1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(34, 34, 34)
            .addComponent(modificar)
            .addGap(61, 61, 61))
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(eliminarC)))
                .addGap(59, 59, 59)))
    );

    getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 171, -1, 550));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Variables que contienen los datos ingresados por el usuario

        String nombre = txtNombre.getText();  // Nombre del usuario
        String apellidos = txtApellidos.getText();  // Apellidos del usuario
        String correoElectronico = txtCorreo.getText();  // Correo electrónico
        String tipoUsuario = comboUsuario.getSelectedItem().toString();  // Tipo de usuario ('Administrador' o 'Cliente')


        if (nombre.isEmpty() || apellidos.isEmpty() || correoElectronico.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Debe completar todos los datos.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!nombre.matches("^[A-Za-zÁÉÍÓÚáéíóúÑñ\\s]+$")) { // Validar nombre sin números ni caracteres especiales
        JOptionPane.showMessageDialog(null, "El nombre solo debe contener letras.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!apellidos.matches("^[A-Za-zÁÉÍÓÚáéíóúÑñ\\s]+$")) { // Validar apellidos sin números ni caracteres especiales
        JOptionPane.showMessageDialog(null, "Los apellidos solo deben contener letras.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!correoElectronico.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$")) { // Validar formato del correo
        JOptionPane.showMessageDialog(null, "Debe ingresar un correo electrónico válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (tipoUsuario.equalsIgnoreCase("Seleccionar")) {
        JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de usuario.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
    // Código para continuar con el procesamiento


            try {
                // Consulta SQL con parámetros placeholders
                String sql = "INSERT INTO cliente (nombre, apellidos, correo_electronico, tipo_de_usuario) VALUES (?, ?, ?, ?)";

                // Preparar la consulta
                PreparedStatement pstmt = conn.prepareStatement(sql);

                // Asignar valores a los placeholders

                pstmt.setString(1, nombre);
                pstmt.setString(2, apellidos);
                pstmt.setString(3, correoElectronico);
                pstmt.setString(4, tipoUsuario);
 

                // Ejecutar la consulta
                pstmt.executeUpdate();

                // Limpiar campos y mostrar mensaje de éxito
                limpiar();
                JOptionPane.showMessageDialog(null, "Usuario registrado con éxito.");
                consultarDatos();

                pstmt.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al registrar el usuario.");
                System.err.println("Error: " + ex.getMessage());
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_SalirActionPerformed

    private void eliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = usuarios.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente para eliminar.");
        return;
    }

    int idUsuario = (int) usuarios.getValueAt(selectedRow, 0);
    try {
        String sql = "DELETE FROM cliente WHERE id_cliente = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, idUsuario);
        pstmt.executeUpdate();
        consultarDatos(); // Refrescar la tabla
        pstmt.close();
        JOptionPane.showMessageDialog(null, "Cliente eliminado con éxito.");
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al eliminar el cliente: " + ex.getMessage());
        ex.printStackTrace();
    }
    }//GEN-LAST:event_eliminarCActionPerformed

    private void usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuariosMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        int column = source.columnAtPoint(evt.getPoint());

if (row >= 0 && column >= 0) {
    filaSeleccionada = row; // Almacena la fila seleccionada

    // Obtener los valores de la fila seleccionada
    String idUsuario2 = source.getValueAt(row, 0).toString(); // id_usuario
    String nombre2 = source.getValueAt(row, 1).toString();    // nombre
    String apellidos2 = source.getValueAt(row, 2).toString(); // apellidos
    String correoElectronico2 = source.getValueAt(row, 3).toString(); // correo_electronico
    String tipoDeUsuario2 = source.getValueAt(row, 4).toString(); // tipo_de_usuario

    // Mostrar los valores de la fila seleccionada en los JTextField
  
    txtNombre.setText(nombre2);
    txtApellidos.setText(apellidos2);
    txtCorreo.setText(correoElectronico2);
    comboUsuario.setSelectedItem(tipoDeUsuario2);
}
    
    }//GEN-LAST:event_usuariosMouseClicked

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
            
String nombre2 = txtNombre.getText();
String apellidos2 = txtApellidos.getText();
String correoElectronico2 = txtCorreo.getText();
String tipoDeUsuario2 = comboUsuario.getSelectedItem().toString(); // ComboBox para el tipo de usuario

// Validar que los campos obligatorios no estén vacíos
if (nombre2.isEmpty() || apellidos2.isEmpty() || correoElectronico2.isEmpty() || tipoDeUsuario2.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Por favor, completa los campos obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Obtener el ID del usuario seleccionado en la tabla
int selectedRow = usuarios.getSelectedRow(); // Cambia "tablaUsuarios" por el nombre de tu JTable
if (selectedRow == -1) {
    JOptionPane.showMessageDialog(this, "Por favor, selecciona un usuario para editar.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}
int idUsuario2 = Integer.parseInt(usuarios.getValueAt(selectedRow, 0).toString()); // Cambia el índice si la columna ID es diferente

// Preparar la consulta SQL para editar los datos
String sql = "UPDATE cliente SET nombre = ?, apellidos = ?, correo_electronico = ?, tipo_de_usuario = ? WHERE id_cliente = ?";

try (PreparedStatement stmt = conn.prepareStatement(sql)) {
    stmt.setString(1, nombre2);
    stmt.setString(2, apellidos2);
    stmt.setString(3, correoElectronico2);
    stmt.setString(4, tipoDeUsuario2);
    stmt.setInt(5, idUsuario2); // Usamos el ID del usuario seleccionado

    // Ejecutar la consulta
    int rowsUpdated = stmt.executeUpdate();
    if (rowsUpdated > 0) {
        JOptionPane.showMessageDialog(this, "Usuario actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        
        // Limpiar los campos de texto
        limpiar();

        // Actualizar la tabla con los datos nuevos
        consultarDatos();
    } else {
        JOptionPane.showMessageDialog(this, "No se encontró un usuario con ese ID.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al actualizar el usuario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Por favor, ingresa datos válidos en los campos correspondientes.", "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_modificarActionPerformed
        void limpiar(){
            txtNombre.setText("");
            txtApellidos.setText("");
            txtCorreo.setText("");
    
        }
private void consultarDatos() {
    try {
        // Consulta SQL para obtener los datos de la tabla usuarios
        String sql = "SELECT id_cliente, nombre, apellidos, correo_electronico, tipo_de_usuario FROM cliente";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        // Obtén el modelo de la tabla para actualizar los datos
        DefaultTableModel model = (DefaultTableModel) usuarios.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos

        // Recorre los resultados y agrega las filas a la tabla
        while (rs.next()) {
            // Extrae los valores de cada columna
            int idUsuario = rs.getInt("id_cliente");
            String nombre = rs.getString("nombre");
            String apellidos = rs.getString("apellidos");
            String correoElectronico = rs.getString("correo_electronico");
            String tipoDeUsuario = rs.getString("tipo_de_usuario");

            // Agrega la fila con los datos a la tabla
            model.addRow(new Object[]{idUsuario, nombre, apellidos, correoElectronico, tipoDeUsuario});
        }
        rs.close();
        pstmt.close();
    } catch (SQLException ex) {
        // Manejo de excepciones, por ejemplo, mostrar un mensaje de error
        System.err.println("Error al consultar datos de usuarios: " + ex.getMessage());
    }
}
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registrocliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registrocliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registrocliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registrocliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registrocliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Salir;
    private javax.swing.JComboBox<String> comboUsuario;
    private libreria.Contraseña contraseña1;
    private javax.swing.JButton eliminarC;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTable usuarios;
    // End of variables declaration//GEN-END:variables
}
