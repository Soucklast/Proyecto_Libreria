/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package libreria;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import libreria.conexion;
import libreria.conexion;
/**
 *
 * @author MSI THIN GF63
 */
public class VentasInventario extends javax.swing.JFrame {
    private int filaSeleccionada = -1;
    Connection conn;

    /**
     * Creates new form NewJFrame
     */
    public VentasInventario() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.conn = conexion.getConnection();
        consultarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableVentas = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Registro de Ventas");

        TableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                // Aquí van las filas, si es necesario
            },
            new String [] {
                "ID Venta", "Fecha de Venta", "ID Cliente"  // Nombres de las columnas modificados
            }
        ));
        jScrollPane1.setViewportView(TableVentas);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/encabezado.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.png"))); // NOI18N

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/print.png"))); // NOI18N
        jToggleButton1.setText("Imprimir recibo");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)
                        .addGap(113, 113, 113))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jToggleButton1))
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(79, 79, 79))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void generarReciboPDF(int idVenta) {
        try {
            // Configuración inicial
            java.util.Date date = new java.util.Date();
            String desktopPath = FileSystemView.getFileSystemView().getDefaultDirectory().getPath();
            File pdfFile = new File(desktopPath, "recibo_venta_" + idVenta + ".pdf");
            FileOutputStream archivo = new FileOutputStream(pdfFile);

            Document doc = new Document();
            PdfWriter.getInstance(doc, archivo);
            doc.open();

            // Agregar logo (modificar ruta según tu estructura)
            Image img = Image.getInstance(getClass().getResource("/imagenes/logo.png"));
            img.scaleToFit(100, 100);

            // Encabezado
            Paragraph fecha = new Paragraph();
            fecha.add(Chunk.NEWLINE);
            fecha.add("Fecha: " + new SimpleDateFormat("dd/MM/yyyy").format(date) + "\n\n");

            PdfPTable encabezado = new PdfPTable(2);
            encabezado.setWidthPercentage(100);
            encabezado.getDefaultCell().setBorder(0);

            encabezado.addCell(img);
            encabezado.addCell(new Paragraph("Recibo de Venta\nID Venta: " + idVenta, new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD)));
            doc.add(encabezado);
            doc.add(fecha);

            // Datos del cliente
            PdfPTable clienteTable = new PdfPTable(2);
            clienteTable.setWidthPercentage(100);
            clienteTable.getDefaultCell().setBorder(0);
            clienteTable.addCell(new Paragraph("Cliente:", new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD)));

            String clienteSQL = "SELECT c.nombre, c.correo_electronico FROM cliente c INNER JOIN ventas v ON c.id_cliente = v.id_cliente WHERE v.id_venta = ?";
            try (PreparedStatement ps = conn.prepareStatement(clienteSQL)) {
                ps.setInt(1, idVenta);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    clienteTable.addCell("Nombre: " + rs.getString("nombre") + "\nEmail: " + rs.getString("correo_electronico"));
                }
            }
            doc.add(clienteTable);

            // Detalle de venta
            PdfPTable detalleTable = new PdfPTable(4);
            detalleTable.setWidthPercentage(100);
            detalleTable.addCell("Cantidad");
            detalleTable.addCell("Descripción");
            detalleTable.addCell("Precio Unitario");
            detalleTable.addCell("Total");

            String detalleSQL = "SELECT dv.cantidad, l.titulo, dv.precio_unitario, dv.precio_total FROM detalle_ventas dv INNER JOIN libros l ON dv.id_libro = l.id_libro WHERE dv.id_venta = ?";
            try (PreparedStatement ps = conn.prepareStatement(detalleSQL)) {
                ps.setInt(1, idVenta);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    detalleTable.addCell(String.valueOf(rs.getInt("cantidad")));
                    detalleTable.addCell(rs.getString("titulo"));
                    detalleTable.addCell(String.format("%.2f", rs.getDouble("precio_unitario")));
                    detalleTable.addCell(String.format("%.2f", rs.getDouble("precio_total")));
                }
            }
            doc.add(detalleTable);

            // Total
            String totalSQL = "SELECT total FROM ventas WHERE id_venta = ?";
            try (PreparedStatement ps = conn.prepareStatement(totalSQL)) {
                ps.setInt(1, idVenta);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    Paragraph total = new Paragraph("Total a Pagar: S/. " + String.format("%.2f", rs.getDouble("total")), new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD));
                    total.setAlignment(Element.ALIGN_RIGHT);
                    doc.add(total);
                }
            }

            doc.close();
            archivo.close();

            // Abrir el PDF automáticamente
            Desktop.getDesktop().open(pdfFile);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al generar el recibo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        String idVentaStr = JOptionPane.showInputDialog(this, "Ingrese el ID de la Venta:", "Generar Recibo", JOptionPane.QUESTION_MESSAGE);
        if (idVentaStr != null && !idVentaStr.isEmpty()) {
            try {
                int idVenta = Integer.parseInt(idVentaStr);
                generarReciboPDF(idVenta);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "El ID de la venta debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
   private void consultarDatos() {
    try {
        // Consulta para obtener los datos de la tabla ventas
        String sql = "SELECT id_venta, fecha_venta, id_cliente, total FROM ventas";  
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        // Obtén el modelo de la tabla para actualizar los datos
        DefaultTableModel model = (DefaultTableModel) TableVentas.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos

        // Recorre los resultados y agrega las filas a la tabla
        while (rs.next()) {
            // Extrae los valores de cada columna
            int idVenta = rs.getInt("id_venta");
            Timestamp fechaVenta = rs.getTimestamp("fecha_venta");  // Usamos Timestamp para manejar la fecha y hora
            int idCliente = rs.getInt("id_cliente");
            double total = rs.getDouble("total");

            // Formatear la fecha para que sea más legible (opcional)
            String fechaVentaFormateada = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(fechaVenta);

            // Agrega la fila con los datos a la tabla
            model.addRow(new Object[]{idVenta, fechaVentaFormateada, idCliente, total});
        }

        rs.close();
        pstmt.close();
    } catch (SQLException ex) {
        // Manejo de excepciones, por ejemplo, mostrar un mensaje de error
        System.err.println("Error: " + ex.getMessage());
    }
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentasInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentasInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentasInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentasInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentasInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableVentas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
